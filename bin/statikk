#!/usr/bin/env node
'use strict';

var path = require('node:path');
var os = require('node:os');
var nopt = require('nopt');
var statik = require('../index');

var usage = [
'HTTP all the things!',
'',
'Usage:',
'  statikk [options] [directory]',
'  statikk --help',
'',
'Options:',
'  --port NNNN   Use a specific port. If not specified, it\'ll use a port automagically based on process.cwd().',
'  --expose      Expose server outside of localhost. Defaults to false.',
'  --open        Open the hosted URL in your default browser. (Only supported on Mac OS!)',

'  --cors        Add CORS headers',
'  --coi         Add cross-origin isolation headers',

'  --help        Show this screen.',
].join('\n');

var known = {
	"port": Number,
	"expose": Boolean,
	"cors": Boolean,
	"coi": Boolean,
	"jsprof": Boolean,
	"help": Boolean,
	"open": Boolean,
};

// note to future me: validation isn't stringent enough to be worth it. so skip it.
// nopt.invalidHandler = (key, val, types) => console.error('Invalid CLI flag value passed:', {key, val, types})

var opts = nopt(known);

if (opts.help)
	return console.log(usage);

if (opts.argv.remain[0] !== undefined)
	opts.root = path.resolve(opts.argv.remain[0]);


statik(opts).then(({url, options}) => {
	const formattedPath = options.root.replace(os.homedir(), '~');
	const reset = '\x1b[0m';
	const boldWhite = '\x1b[1m\x1b[37m';
	const dimWhite = '\x1b[2m\x1b[37m';
	console.log(boldWhite, `ðŸ¤“ ${url}`, reset, 'statikk serving up:', `${dimWhite}${formattedPath}`, reset);
});
